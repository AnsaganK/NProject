"""Added required tables

Revision ID: 45842ed50971
Revises: 
Create Date: 2021-03-12 10:59:17.839904

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '45842ed50971'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('RolesPermissions')
    op.drop_table('SelectionOrganization')
    op.drop_table('OrganizationUser')
    op.drop_table('roles')
    op.drop_table('SelectionSamples')
    op.drop_table('fields')
    op.drop_table('FieldOrganization')
    op.drop_table('organization')
    op.drop_table('SamplesClient')
    op.drop_table('SamplesElement')
    op.drop_table('selection')
    op.drop_table('UsersRoles')
    op.drop_table('samples')
    op.drop_table('permissions')
    op.drop_table('users')
    op.drop_table('elements')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('elements',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('elements_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('standard', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='elements_pkey'),
    sa.UniqueConstraint('name', name='elements_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('firstName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('lastName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    sa.UniqueConstraint('username', name='users_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('permissions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('permissions_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='permissions_pkey'),
    sa.UniqueConstraint('code', name='permissions_code_key'),
    sa.UniqueConstraint('name', name='permissions_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('samples',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('samples_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('standard', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('date', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='samples_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('UsersRoles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"UsersRoles_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('userId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('roleId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['roleId'], ['roles.id'], name='UsersRoles_roleId_fkey'),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], name='UsersRoles_userId_fkey'),
    sa.PrimaryKeyConstraint('id', name='UsersRoles_pkey')
    )
    op.create_table('selection',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('selection_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='selection_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('SamplesElement',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"SamplesElement_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('samplesId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('elementId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['elementId'], ['elements.id'], name='SamplesElement_elementId_fkey'),
    sa.ForeignKeyConstraint(['samplesId'], ['samples.id'], name='SamplesElement_samplesId_fkey'),
    sa.PrimaryKeyConstraint('id', name='SamplesElement_pkey')
    )
    op.create_table('SamplesClient',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"SamplesClient_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('samplesId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('clientId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['clientId'], ['organization.id'], name='SamplesClient_clientId_fkey'),
    sa.ForeignKeyConstraint(['samplesId'], ['samples.id'], name='SamplesClient_samplesId_fkey'),
    sa.PrimaryKeyConstraint('id', name='SamplesClient_pkey')
    )
    op.create_table('organization',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('organization_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('bin', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='organization_pkey'),
    sa.UniqueConstraint('name', name='organization_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('FieldOrganization',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"FieldOrganization_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('FieldId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('organizationId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['FieldId'], ['fields.id'], name='FieldOrganization_FieldId_fkey'),
    sa.ForeignKeyConstraint(['organizationId'], ['organization.id'], name='FieldOrganization_organizationId_fkey'),
    sa.PrimaryKeyConstraint('id', name='FieldOrganization_pkey')
    )
    op.create_table('fields',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('kadastrNumber', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('urlShpFile', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('districtId', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='fields_pkey'),
    sa.UniqueConstraint('kadastrNumber', name='fields_kadastrNumber_key')
    )
    op.create_table('SelectionSamples',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"SelectionSamples_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('selectionId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('samplesId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['samplesId'], ['samples.id'], name='SelectionSamples_samplesId_fkey'),
    sa.ForeignKeyConstraint(['selectionId'], ['selection.id'], name='SelectionSamples_selectionId_fkey'),
    sa.PrimaryKeyConstraint('id', name='SelectionSamples_pkey')
    )
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('roles_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='roles_pkey'),
    sa.UniqueConstraint('name', name='roles_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('OrganizationUser',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"OrganizationUser_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('OrganizationId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('UserId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['OrganizationId'], ['organization.id'], name='OrganizationUser_OrganizationId_fkey'),
    sa.ForeignKeyConstraint(['UserId'], ['users.id'], name='OrganizationUser_UserId_fkey'),
    sa.PrimaryKeyConstraint('id', name='OrganizationUser_pkey')
    )
    op.create_table('SelectionOrganization',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"SelectionOrganization_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('selectionId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('organizationId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['organizationId'], ['organization.id'], name='SelectionOrganization_organizationId_fkey'),
    sa.ForeignKeyConstraint(['selectionId'], ['selection.id'], name='SelectionOrganization_selectionId_fkey'),
    sa.PrimaryKeyConstraint('id', name='SelectionOrganization_pkey')
    )
    op.create_table('RolesPermissions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"RolesPermissions_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('roleId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('permissionId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['permissionId'], ['permissions.id'], name='RolesPermissions_permissionId_fkey'),
    sa.ForeignKeyConstraint(['roleId'], ['roles.id'], name='RolesPermissions_roleId_fkey'),
    sa.PrimaryKeyConstraint('id', name='RolesPermissions_pkey')
    )
    # ### end Alembic commands ###
